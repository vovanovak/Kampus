@using Kampus.Models
@{
    ViewBag.Title = "Index";
    UserModel user = ViewBag.CurrentUser;
}

<html>

<head>
    @Scripts.Render("~/bundles/jquery")
    
    <link rel="stylesheet" href="../../Content/null_style.css" />
    <link rel="stylesheet" href="../../Content/profile_style.css"/>
    
    <link rel="stylesheet" href="~/Content/toolbar_style.css" />
    <link rel="stylesheet" href="../../Content/notifications_style.css" />
    
    <link rel="stylesheet" href="~/Content/attach_style.css" />
       
    <link rel="SHORTCUT ICON" href="~/Images/favicon.png" type="image/x-icon"/> <title>Стіна</title>

    <script src="~/Scripts/knockout-3.4.0.js"></script>

    <script src="~/Scripts/My/notification.js"></script>

    <script>
    var koViewModel;
    var attachments = new Array();
    function resizeAside() {

        if ($('#aside').height() < $('#posts').height() + 50) {
            $('#aside').height($('#posts').height() + 50);
            $('#aside').css("background", "white");
        }

    }

    function getFormattedDate(date) {
        var year = date.getYear();
        var month = (1 + date.getMonth()).toString();
        month = month.length > 1 ? month : '0' + month;
        var day = date.getDate().toString();
        day = day.length > 1 ? day : '0' + day;
        return year + '/' + month + '/' + day;
    }

    $(document).ready(function () {
        function ViewModel(wallposts, comments, attach, images) {
            self = this;
            self.newWallposts = ko.observableArray(wallposts);
            self.newWallpostComments = ko.observableArray(comments);
            self.attachments = ko.observableArray(attach);
            self.attachmentsImages = ko.observableArray(images);
            self.getWallpostComments = function(Id){
                console.log(Id);
                console.log(ko.utils.arrayFilter(koViewModel.newWallpostComments(), function (item) { return item.Id === Id }));
                return ko.utils.arrayFilter(koViewModel.newWallpostComments(), function (item) { return item.Id === Id }).Comments;
            }


            self.addChild = function (obj) {
                self.newWallposts.unshift(obj);
            };
            self.addNewAttachment = function (obj) {
                self.attachments.push(obj);
            };
            self.addNewAttachImage = function (obj) {
                self.attachmentsImages.push(obj);
            }
            self.addNewWallPostComment = function (obj) {

                self.newWallpostComments.push(obj);
                console.log(self.newWallpostComments());
            }
            self.clearAttachments = function () {
                self.attachments = [];
            }
            self.clearAttachImages = function () {
                self.attachmentsImages = [];
            }
            koViewModel = self;
        }
        if ($('#aside').height() < $('#posts').height() + 50) {
            $('#aside').height($('#posts').height() + 50);
            $('#aside').css("background", "white");
        }

        $(window).resize(function () {
           
        });

        notifications_init();

        $.ajax('@Url.Content("~/Templates/wallpost.html")', { async: false })
            .success(function (stream) {
                $('#templateWallpost').html(stream);
            }
        );

        $.ajax('@Url.Content("~/Templates/wallpost_comment.html")', { async: false })
            .success(function (stream) {
                $('#templateWallpostComment').html(stream);
            }
        );

        $.ajax('@Url.Content("~/Templates/attachment_file.html")', { async: false })
           .success(function (stream) {
               $('#templateAttachments').html(stream);
           }
       );

        $.ajax('@Url.Content("~/Templates/attachment_image.html")', { async: false })
          .success(function (stream) {
              $('#templateImages').html(stream);
          }
        );
        ko.applyBindings(new ViewModel([], [], [], []));
        $("#maininputmsgfilesin").change(function () {
            attachments.push($("#maininputmsgfilesin").val());
        });

        $(".maininputaddfile").click(function () {
            $("#maininputmsgfilesin").trigger("click");
        });

        $(".maininputaddphoto").click(function () {
            $("#maininputmsgfilesin").trigger("click");
        });

        $(document.body).on('click', '.postcomments', function () {
            $(this).parents('.post').children('.postcommentshid').slideToggle("slow");
            var postthis = $(this);
            var count = $(this).parents('.post').find('.postcount')[0];
            var appenddiv = $(this).parents('.post').find('.postcommentscontent')[0];

            setInterval(function () {
                var _postid = postthis.parents('.post').find('.postid').val();
                var _postcommentid = postthis.parents('.post').find('.postcommentid:last').val();

                $.get('@Url.Action("GetNewWallPostComments", "Home")', { postid: _postid, postcommentid: _postcommentid }).done(function (data) {
                    var list = JSON.parse(data);

                    if (list.length > 0) {
                        for (var i = 0; i < list.length; i++) {
                            koViewModel.addNewWallPostComment({ Id: _postid, Comments: list[i] });
                        }

                        var value = parseInt($(count).text());

                        $(count).text(value + list.length);
                    }
                });
            }, 3000);

           
        });

        $(document.body).on('click', '.postlikes', function () {
            var val1 = $(this).parents(1).find('.postid')[0].value;
            var postthis = $(this);
            $.post('@Url.Action("LikeWallPost", "Home")', { postid: val1 }, function (data) {
                var count = parseInt(postthis.children().first().text());

                if (data == 0)
                    postthis.children().first().text(count - 1);
                else {
                    postthis.children().first().text(count + 1);
                }
            });
        });

        $(document.body).on('click', '.maininputcommentsend', function () {
            var val1 = $(this).parents('.post').find('.postid')[0].value;
            var text1 = $(this).parent().children('.maininputcommentinput').val();
            var count = $(this).parents('.post').find('.postcount')[0];
            var postthis = $(this);

            $.post('@Url.Action("WritePostComment", "Home")', { postid: val1, text: text1 }, function (data) {


                koViewModel.addNewWallPostComment({ Id: val1, Comments: JSON.parse(data) });

                console.log({ Id: val1, Comments: JSON.parse(data) });


                var value = parseInt($(count).text());

                $(count).text(value + 1);
                $(text1).text('');
               
            });
        });

        $("#maininputmsgfilesin").change(function () {
            var _formData = new FormData();
            var files = $("#maininputmsgfilesin").get(0).files;
            for (var i = 0; i < files.length; i++) {
                _formData.append("FileUpload", files[i]);
            }

            $.ajax({
                type: "POST",
                url: '@Url.Action("UploadFileWallpost", "Home")',
            data: _formData,
            dataType: 'json',
            contentType: false,
            processData: false,
            success: function () {
                var fileName = files[files.length - 1].name;
                var lastIndexOfDot = fileName.lastIndexOf('.');
                var extension = fileName.slice(lastIndexOfDot, fileName.length);

                if (extension.localeCompare('.jpg') == 0) {
                    koViewModel.addNewAttachImage({ FileName: files[files.length - 1].name, Path: URL.createObjectURL(files[files.length - 1]).toLocaleString() });
                }
                else {
                    koViewModel.addNewAttachment({ FileName: files[files.length - 1].name, Path: URL.createObjectURL(files[files.length - 1]).toLocaleString() });
                    console.log(files[files.length - 1].name);
                }
            },
            error: function (error) {
                alert("Error while uploading file!");
            }
        });

    });
    $(document.body).on('click', '#maininputmsgcontentsend', function () {
        var _text = $('#maininputmsgcontentinput').val();
        $.post('@Url.Action("WriteWallPost", "Home")', { text: _text }, function (json) {
            var data = JSON.parse(json);
            console.log(data);
            koViewModel.addChild(data);
            koViewModel.clearAttachments();
            koViewModel.clearAttachImages();
            $('#maininputmsgfilesin').val([]);
            console.log($('#maininputmsgfilesin').val());

            $('#maininputmsgcontentinput').val("");
            $('#maininputmsgcontent').find('.filerefcont').remove();
            $('#maininputmsgcontent').find('.maininputmsgimages').children().remove();
            console.log(data.Username);
            
           
        });
    });

    });
</script>

    
</head>

<body>
    @Html.Partial("Toolbar")

    <div id="wrapper">
        <div id="profile">
            <div id="profilebackground">
                <div id="profilebackgrounddetails">
                    <div id="profilebackgrounddetailsavatar">
                        <div id="profilebackgrounddetailsavatarimg">
                            <img id="profilebackgrounddetailsavatarimg1" src="@(string.IsNullOrEmpty(user.Avatar) ? Url.Content("../../Images/question_mark.jpg") : Url.Content(string.Concat("../.." + user.Avatar)))" />
                        </div>
                        
                    </div>
                    <div id="profilebackgrounddetailstext">
                        <div id="profilebackgrounddetailstextcred">
                            <div id="profiledetailsfullname">@user.FullName</div>
                            <div id="profiledetailsusername">@@@user.Username</div>
                            @if (user.Rating != 0)
                            {
                                <div id="profiledetailsrating">Ваш рейтинг: @user.Rating</div>
                            }
                            <div id="profilebackgrounddetailsavataricons">
                                <a href="@Url.Action("Friends", "Home")"><img title="Підписатись" style="cursor: pointer;" id="addsubscriber" src="../../Images/round/friends_icon.png" /></a>
                                <a href="@Url.Action("Messages", "Home")"><img title="Надіслати повідомлення" style="cursor: pointer;" id="sendmsg" src="../../Images/round/messages_icon.png"></a>
                                <a href="@Url.Action("Tasks", "Home")"><img id="viewtasks" src="../../Images/round/tasks_icon.png" /></a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div id="profilebedgesandposts">
                <div id="profilebedges">
                    <div id="profilebedgesheader">Бейджі</div>
                    <div style="position: relative; left: -270px; width: 1200px; top: 40px;">
                        @{ int i = 0;
                           if (user.Achievements != null)
                           { 
                                foreach (string a in user.Achievements)
                                {
                                    if (i < 5) {  
                                        <img src="~/Images/Categories/@(a + ".png")" title="@a" style="cursor:pointer; margin-left: 30px;" />
                                        i++;
                                    }
                                }
                            }
                        }
                    </div>
                </div>
                <div id="posts">
                    
                    <div id="maininputmsg">
                        <div id="maininputmsgheader">Стіна</div>
                        <div id="maininputmsgcontent">
                            <div class="maininputmsgimages" data-bind="template: { name: 'attachment-image' , foreach: attachmentsImages }">

                            </div>
                            <textarea name="text" id="maininputmsgcontentinput"></textarea>
                            <div class="filerefs" data-bind="template: { name: 'attachment-file', foreach: attachments }">

                            </div>
                            
                            <div class="maininputmsgcontentdivsend">
                                <img class="maininputaddphoto" src="~/Images/add_photo.png" />
                                <img class="maininputaddfile" src="~/Images/add_file.png" />
                                
                                <input type="submit" value="Відправити" id="maininputmsgcontentsend" />
                                <input id="maininputmsgfilesin"
                                       type="file" name="file" multiple />

                            </div>
                        </div>
                        <div id="maininputmsgtriangle"></div>
                    </div>

                    @if (user.Posts != null)
                    {
                        <div id="postscontent">
                            <div data-bind="template: { name: 'wallpost-template', foreach: newWallposts }">

                            </div>
                            @foreach (WallPostModel post in ViewBag.CurrentUser.Posts)
                            {
                                <div class="post">
                                    <div class="postcontent">
                                        @if (post.Attachments.Any(p => p.IsImage))
                                        {
                                            foreach (var image in post.Attachments.Where(p => p.IsImage))
                                            {
                                                <img class="attachImg" src="/Files/@image.RealFileName" />
                                            }
                                        }
                                        <div class="postcontenttext">
                                            @post.Content
                                        </div>
                                        @if (post.Attachments.Any(p => !p.IsImage))
                                        {
                                            <div class="filerefs">
                                                @foreach (var link in post.Attachments.Where(p => !p.IsImage))
                                                {
                                                <div class="filerefcont">
                                                    <img src="~/Images/round/attachment.png" /> @Html.ActionLink(link.FileName,
                                                    "Download", "Download", new { path = link.RealFileName, fileName = link.FileName },
                                                    new { @class = "fileref" })
                                                </div>
                                                }
                                             </div>
                                        }
                                    </div>
                                    <div class="postcommentshid">
                                        <div class="postcommentscontent">
                                            @if (post.Comments.Count > 0)
                                            {
                                                foreach (var comment in post.Comments)
                                                {
                                                    <div class="postcomment">
                                                        <div class="postcommentcontent">
                                                            <div class="postcommentcontenttext">
                                                                @comment.Content
                                                            </div>
                                                        </div>
                                                        <div class="postcommenttriangle"></div>
                                                        <div class="postcommentcreator">@@@comment.User.Username</div>
                                                        <div>
                                                            <input class="postcommentid" type="hidden" value="@comment.Id" />
                                                        </div>
                                                    </div>
                                                }
                                            }
                                            <div data-bind="foreach: newWallpostComments">
                                                <div data-bind="if: Id == @post.Id">
                                                    <div data-bind="template: { name: 'wallpost-comment'}"></div>
                                                 </div>

                                            </div>
                                        </div>
                                        <div class="maininputcomment">
                                            <div class="maininputcommentcontent">
                                                
                                                <textarea type="text" name="text" class="maininputcommentinput"></textarea>
                                                
                                                <input type="button" value="Відправити" class="maininputcommentsend" />
                                            </div>
                                            <div class="maininputcommenttriangle"></div>
                                        </div>
                                    </div>
                                    <div class="posttriangle"></div>
                                    <div class="postunder">
                                        <div class="postcreator">@@@post.Sender.Username</div>
                                        <div class="postcomments">
                                            <span class="postcount">@post.Comments.Count</span> <img src="../Images/comments.png" align="middle" width="28" />
                                        </div>
                                        <div class="postlikes">
                                            <span class="postcount">@post.Likes.Count</span> <img src="../Images/like.png" width="28" />
                                        </div>
                                    </div>
                                    <input type="hidden" class="postid" value="@post.Id" />

                                </div>

                            }
                            
                        </div>
                    }



                </div>
            </div>

        </div>

        <div id="aside">
            <div id="info">
                <div id="infoheader">
                    Інформація
                </div>
                <div id="infocontent">
                    <div class="infocontentrow" style="padding-top: 20px;">
                        <div class="infocontentkey">Дата народження:</div>
                        <div class="infocontentvalue">@user.DateOfBirth.ToShortDateString()</div>
                    </div>
                    <div class="infocontentrow">
                        <div class="infocontentkey">Місто:</div>
                        <div class="infocontentvalue">@user.City</div>
                    </div>
                    <div class="infocontentrow" style="margin-top: 20px;">
                        <div class="infocontentkey">ВУЗ:</div>
                        <div class="infocontentvalue">@user.UniversityName</div>
                    </div>
                    <div class="infocontentrow">
                        <div class="infocontentkey">Факультет:</div>
                        <div class="infocontentvalue">@user.UniversityFaculty</div>
                    </div>
                    <div class="infocontentrow" style="padding-bottom: 20px;">
                        <div class="infocontentkey">Курс:</div>
                        <div class="infocontentvalue">@user.UniversityCourse</div>
                    </div>
                </div>
            </div>

            <div id="friends">
                <a href="@Url.Action("Friends")" style="text-decoration: none;"><div class="friendsheader">
                    Друзі
                </div></a>
                <div class="friendscontent">
                    @if (!user.Friends.Any())
                    {
                        <div class="nofr">Поки що немає друзів</div>
                    }
                    else
                    {
                        foreach (var friend in ViewBag.CurrentUser.Friends)
                         {
                             <div>
                                 <div class="friendcontentrow">
                                     <div>
                                         <img class="friendavatarimg" src="@(string.IsNullOrEmpty(friend.Avatar) ? Url.Content("../../Images/question_mark.jpg") : friend.Avatar)" width="75">
                                     </div>
                                     <a href="@Url.Action("Id", "Profile", new{ Id = friend.Id })" style="text-decoration: none;"><div class="friendname">@@@friend.Username</div></a>
                                 </div>
                             </div>
                         }
                    }
                </div>
            </div>

            <div id="subscribers">
                <a href="@Url.Action("Subscribers")" style="text-decoration: none;">
                    <div class="friendsheader">
                        Підписники
                    </div>
                </a>
                    <div class="friendscontent">
                        @if (!user.Subscribers.Any())
                        {
                            <div class="nofr">Поки що немає підписників</div>
                        }
                        else
                        {
                            foreach (var subscriber in ViewBag.CurrentUser.Subscribers)
                            {
                                <div>
                                    <div class="friendcontentrow">
                                        <div>
                                            <img class="friendavatarimg" src="@(string.IsNullOrEmpty(subscriber.Avatar) ? Url.Content("../../Images/question_mark.jpg") : subscriber.Avatar)" width="75">
                                        </div>
                                        <a href="@Url.Action("Id", "Profile", new{ Id = subscriber.Id })" style="text-decoration: none;"><div class="friendname">@@@subscriber.Username</div></a>
                                        </div>
                                </div>
                            }
                        }
                    </div>
                </div>

        </div>
        
    </div>
    <div id="templateWallpost"></div>
    <div id="templateWallpostComment"></div>
    <div id="templateAttachments"></div>
    <div id="templateImages"></div>
</body>
</html>